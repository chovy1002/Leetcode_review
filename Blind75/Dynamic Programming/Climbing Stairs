# O(n) Dynamic Programming
class Solution:
    def climbStairs(self, n: int) -> int:
        # 斐波那契數列
        if n == 0 or n == 1:
            return 1
        # Space Complexity O(n)
        dp = [0] * (n + 1)
        dp[0], dp[1] = 1, 1
        for i in range(2, (n + 1)):
            dp[i] = dp[i - 2] + dp[i - 1]

        return dp[n]

        # Space Complexity 可改進 O(1) means 只存兩數
        curr, prev = 1, 1
        for _ in range(2, (n + 1)):
            curr, prev = prev, curr + prev

        return prev
