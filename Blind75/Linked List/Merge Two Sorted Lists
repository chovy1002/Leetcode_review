# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
# O(n)
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        # dummy 虛擬 link head (同時避免 None 的情況)
        curr = dummy = ListNode()
        # 同時走 List1&2 依大小排序
        while list1 and list2:
            if list1.val < list2.val:
                curr.next = list1
                list1, curr = list1.next, list1
            else:
                curr.next = list2
                list2, curr = list2.next, list2

        # 當其中一個走完，另一個直接全接上
        if list1:
            curr.next = list1
        elif list2:
            curr.next = list2

        return dummy.next
        
